upstream_project_url: https://github.com/jelly/cockpit
issue_repository: https://github.com/jelly/cockpit-podman
# HACK: spec must be next to the generated tarball; https://github.com/packit/packit/issues/1621
specfile_path: cockpit.spec
actions:
  post-upstream-clone:
    # HACK: spec must be next to the generated tarball; https://github.com/packit/packit/issues/1621
    - cp tools/cockpit.spec .

  create-archive:
    # The sandcastle doesn't have enough ram to run webpack, so wait
    # until the webpack-jumpstart workflow has run and grab the result.
    - tools/webpack-jumpstart --wait --rebase
    - tools/make-dist

srpm_build_deps:
  - automake
  - gcc
  - glib2-devel
  - make
  - systemd-devel
# use the nicely formatted release NEWS from our upstream release, instead of git shortlog
copy_upstream_release_description: true
jobs:
  - job: copr_build
    trigger: release
    owner: "jelly"
    project: "cockpit-podman"
    preserve_project: True
    actions:
      post-upstream-clone:
        # HACK: spec must be next to the generated tarball; https://github.com/packit/packit/issues/1621
        # PACKIT_PROJECT_VERSION_NAME is not avaiable yet here.
        - sh -exc "sed -re 's/(^Version:).*/\1 $(git describe --tags --abbrev=0)/'> cockpit.spec < tools/cockpit.spec"
        # HACK: https://github.com/packit/packit/issues/1560
        - tools/node-modules checkout
      # HACK: tarball for releases (copr_build, koji, etc.), copying spec's Source0; this
      # really should be the default, see https://github.com/packit/packit-service/issues/1505
      create-archive:
        - sh -exc "curl -L -O https://github.com/cockpit-project/cockpit/releases/download/${PACKIT_PROJECT_VERSION}/${PACKIT_PROJECT_NAME_VERSION}.tar.xz"
        - sh -exc "ls ${PACKIT_PROJECT_NAME_VERSION}.tar.xz"
